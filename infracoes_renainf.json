// Variáveis globais para o estado da aplicação
let infracoesCarregadas = [];
let paginaAtual = 1;
const resultadosPorPagina = 10;
let termoBuscaAtual = "";

// --- Função para Normalizar Texto ---
function normalizarTexto(texto) {
    if (typeof texto !== 'string') {
        texto = String(texto || "");
    }
    return texto
        .toLowerCase()
        .normalize("NFD")
        .replace(/[\u0300-\u036f]/g, "")
        .replace(/[.,;:!?()\[\]{}"'-]/g, "")
        .replace(/\s+/g, " ")
        .trim();
}

// --- Função para Carregar Dados do JSON ---
async function carregarDadosInfracoes() {
    console.log("Iniciando carregamento do arquivo infracoes_renainf.json...");
    try {
        const resposta = await fetch("infracoes_renainf.json");
        if (!resposta.ok) throw new Error(`Erro HTTP: ${resposta.status} - ${resposta.statusText}`);
        const dados = await resposta.json();
        infracoesCarregadas = Array.isArray(dados) ? dados : [];
        console.log(`Total de infrações carregadas: ${infracoesCarregadas.length}`);
    } catch (error) {
        console.error("Erro ao carregar infrações:", error);
        const divRespostas = document.getElementById("respostas");
        if (divRespostas) {
            divRespostas.innerHTML = `<p style="color: red;">Erro ao carregar infrações: ${error.message}</p>`;
        }
    }
}

// --- Função de Busca ---
function buscarInfracoes(termoPesquisa) {
    termoBuscaAtual = normalizarTexto(termoPesquisa);
    const palavrasBusca = termoBuscaAtual.split(" ").filter(p => p.length > 0);
    if (palavrasBusca.length === 0) return [];

    return infracoesCarregadas.filter(item => {
        const textoCompleto = [
            item["codigo"],
            item["desdobramento"],
            item["descricao"],
            item["artigo_ctb"],
            item["infrator"],
            item["gravidade"],
            item["orgao_competente"]
        ].map(campo => normalizarTexto(campo)).join(" ");
        return palavrasBusca.some(p => textoCompleto.includes(p));
    });
}

// --- Função para Destacar Termos ---
function destacarTermo(textoOriginal) {
    const palavras = termoBuscaAtual.split(" ").filter(p => p.length > 0);
    if (!textoOriginal || palavras.length === 0) return textoOriginal || "N/A";

    const termosRegex = palavras.map(p => p.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')).join("|");
    try {
        return textoOriginal.replace(new RegExp(`(${termosRegex})`, "gi"), match => `<mark>${match}</mark>`);
    } catch (e) {
        return textoOriginal;
    }
}

// --- Mostrar Resultados ---
function mostrarResultados(resultados) {
    const divRespostas = document.getElementById("respostas");
    if (!divRespostas) return;

    divRespostas.innerHTML = "";
    if (resultados.length === 0) {
        divRespostas.innerHTML = `<p class="mensagem-inicial">Nenhuma infração encontrada para a sua pesquisa "${termoBuscaAtual}".</p>`;
        return;
    }

    const inicio = (paginaAtual - 1) * resultadosPorPagina;
    const fim = inicio + resultadosPorPagina;
    const pagina = resultados.slice(inicio, fim);

    pagina.forEach(item => {
        const bloco = document.createElement("div");
        bloco.className = "resultado-infracao";
        bloco.innerHTML = `
            <strong>Código:</strong> ${item["codigo"] || "N/A"}<br>
            <strong>Desdobramento:</strong> ${destacarTermo(item["desdobramento"])}<br>
            <strong>Descrição:</strong> ${destacarTermo(item["descricao"])}<br>
            <strong>Artigo CTB:</strong> ${destacarTermo(item["artigo_ctb"])}<br>
            <strong>Infrator:</strong> ${destacarTermo(item["infrator"])}<br>
            <strong>Gravidade:</strong> ${destacarTermo(item["gravidade"])}<br>
            <strong>Órgão Competente:</strong> ${destacarTermo(item["orgao_competente"])}
        `;
        divRespostas.appendChild(bloco);
    });

    mostrarPaginacao(resultados.length);
}

// --- Paginação ---
function mostrarPaginacao(total) {
    const divRespostas = document.getElementById("respostas");
    if (!divRespostas || total <= resultadosPorPagina) return;

    const totalPaginas = Math.ceil(total / resultadosPorPagina);
    const nav = document.createElement("div");
    nav.className = "paginacao";

    const input = document.getElementById("pergunta");

    if (paginaAtual > 1) {
        const btnAnterior = document.createElement("button");
        btnAnterior.textContent = "⬅ Anterior";
        btnAnterior.onclick = () => {
            paginaAtual--;
            mostrarResultados(buscarInfracoes(input.value));
            window.scrollTo({ top: 0, behavior: 'smooth' });
        };
        nav.appendChild(btnAnterior);
    }

    for (let i = 1; i <= totalPaginas; i++) {
        const btn = document.createElement("button");
        btn.textContent = i;
        btn.className = paginaAtual === i ? "active" : "";
        btn.onclick = () => {
            paginaAtual = i;
            mostrarResultados(buscarInfracoes(input.value));
            window.scrollTo({ top: 0, behavior: 'smooth' });
        };
        nav.appendChild(btn);
    }

    if (paginaAtual < totalPaginas) {
        const btnProximo = document.createElement("button");
        btnProximo.textContent = "Próximo ➡";
        btnProximo.onclick = () => {
            paginaAtual++;
            mostrarResultados(buscarInfracoes(input.value));
            window.scrollTo({ top: 0, behavior: 'smooth' });
        };
        nav.appendChild(btnProximo);
    }

    divRespostas.appendChild(nav);
}

// --- Carregar Órgãos Autuadores (Anexo V) ---
async function carregarOrgaosAutuadores() {
    const tabela = document.getElementById("tabelaOrgaos");
    if (!tabela) {
        console.warn("Elemento #tabelaOrgaos não encontrado.");
        return;
    }

    try {
        const resposta = await fetch("PORTARIA59_anexo.json");
        const json = await resposta.json();
        const linhas = json["Sheet1"];
        if (!Array.isArray(linhas)) return;

        linhas.forEach(linha => {
            if (linha && linha["ANEXO V"]) {
                const partes = linha["ANEXO V"].split(" - ");
                if (partes.length >= 2 && /^\d{6}/.test(partes[0])) {
                    const codigo = partes[0];
                    const orgao = partes.slice(1).join(" - ");
                    const tr = document.createElement("tr");
                    tr.innerHTML = `<td>${codigo}</td><td>${orgao}</td>`;
                    tabela.appendChild(tr);
                }
            }
        });
    } catch (error) {
        console.error("Erro ao carregar órgãos autuadores:", error);
    }
}

// --- Inicialização ---
document.addEventListener("DOMContentLoaded", () => {
    const divRespostas = document.getElementById("respostas");
    if (divRespostas) {
        divRespostas.innerHTML = '<p class="mensagem-inicial">Carregando dados das infrações...</p>';
    }

    carregarDadosInfracoes().then(() => {
        const inputBusca = document.getElementById("pergunta");
        if (inputBusca) {
            inputBusca.addEventListener("input", () => {
                paginaAtual = 1;
                const resultados = buscarInfracoes(inputBusca.value);
                mostrarResultados(resultados);
            });
            if (inputBusca.value.trim() !== '') {
                const resultados = buscarInfracoes(inputBusca.value);
                mostrarResultados(resultados);
            } else if (divRespostas) {
                divRespostas.innerHTML = '<p class="mensagem-inicial">Digite no campo acima para pesquisar infrações.</p>';
            }
        }
    });

    carregarOrgaosAutuadores(); // Carrega a tabela de órgãos
});
